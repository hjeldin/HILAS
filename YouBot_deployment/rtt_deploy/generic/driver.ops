import("YouBot_OODL");
import("EventLogger");
import("rtt_sensor_msgs");
import("rtt_std_msgs");
import("rtt_geometry_msgs");
import("rtt_nav_msgs")
import("rtt_motion_control_msgs");

displayComponentTypes;

loadComponent("driver","YouBot::YouBotOODL");
loadComponent("EventLogger", "EventLogger");

setActivity("driver", 0.001, HighestPriority, ORO_SCHED_RT);
// Adjust comments to enable/disable Wifi-watchdog.
//driver.noWatchdog;
driver.configure;

var ConnPolicy cp_rt;
cp_rt.type = DATA;  
cp_rt.lock_policy = LOCK_FREE;

var ConnPolicy cp_events;
cp_events.type = BUFFER;
cp_events.lock_policy = LOCK_FREE;
cp_events.size = 20;

connectPeers("driver", "EventLogger");
connect("driver.events", "EventLogger.events", cp_events);

#
# ROS output
#

var ConnPolicy cp_ros;
cp_ros.transport = 3;
cp_ros.type = BUFFER;
cp_ros.size=1;
cp_ros.lock_policy = LOCK_FREE;
cp_ros.name_id = "/watchdog/keepalive";
stream("youbot.WatchdogService.watchdog_msg", cp_ros);

#var ConnPolicy cp_ros;
#cp_ros.transport = 3;
#cp_ros.name_id = "/debug/arm/joint_state";
#stream("driver.Arm1.joint_state", cp_ros);

#cp_ros.name_id = "/debug/base/joint_state";
#stream("driver.Base.joint_state", cp_ros);

# 
# Start running
# 
setActivity("EventLogger", 0.1, LowestPriority, ORO_SCHED_OTHER)
EventLogger.configure;
EventLogger.start;
driver.start;

