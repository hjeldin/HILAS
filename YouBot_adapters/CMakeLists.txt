cmake_minimum_required(VERSION 2.6.3)

#
# This creates a standard cmake project. You may extend this file with
# any cmake macro you see fit.
#
project(YouBot_adapters)

#
# Do setup in case of ros package, If ROS_ROOT is set, it is
# recommended to use RTT/OCL through the ros packages.
#
set (ROS_ROOT $ENV{ROS_ROOT} )
if (ROS_ROOT)
  include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)
  rosbuild_init()
  rosbuild_find_ros_package( rtt )
  set( RTT_HINTS HINTS ${rtt_PACKAGE_PATH}/install )
  rosbuild_genmsg()
  rosbuild_include(rtt_rosnode GenerateRTTtypekit)
  ros_generate_rtt_typekit(YouBot_adapters)


# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_find_ros_package( Orocos_OODL )

# Set the CMAKE_PREFIX_PATH in case you're not using Orocos through ROS
# for helping these find commands find RTT.
find_package(OROCOS-RTT REQUIRED ${RTT_HINTS})

# Defines the orocos_* cmake macros. See that file for additional
# documentation.
include(${OROCOS-RTT_USE_FILE_PATH}/UseOROCOS-RTT.cmake)

# Determine target
set(OROCOS_TARGET $ENV{OROCOS_TARGET})
include(${CMAKE_CURRENT_SOURCE_DIR}/../eclipse.cmake)

#
# Compile stuff
#

SET(LIBRARY_OUTPUT_PATH ${CMAKE_HOME_DIRECTORY}/lib)
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_HOME_DIRECTORY}/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_HOME_DIRECTORY}/bin)

#defines the core sources and includes
#SET(COMMON_INCLUDE_DIR ${CMAKE_HOME_DIRECTORY}/include)

ADD_SUBDIRECTORY(TSimToYouBotMsg)
ADD_SUBDIRECTORY(YouBotMsgToTSim)
ADD_SUBDIRECTORY(YouBotOdometryToTSim)
ADD_SUBDIRECTORY(HomogeneousToTF)
ADD_SUBDIRECTORY(TSimYouBotStatePublisher)
ADD_SUBDIRECTORY(tests)

endif()
